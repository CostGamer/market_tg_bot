from logging import getLogger

logger = getLogger(__name__)


class NotificationService:
    def __init__(self, bot):
        self.bot = bot

    async def notify_order_status_change(
        self, user_tg_id: int, order_id: int, new_status: str
    ):
        try:
            status_messages = {
                "–û–ø–ª–∞—á–µ–Ω": "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω –∏ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É",
                "–ï–¥–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥": "üì¶ –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–∫–ª–∞–¥ –≤ –ö–∏—Ç–∞–µ",
                "–ù–∞ —Å–∫–ª–∞–¥–µ": "üè≠ –í–∞—à –∑–∞–∫–∞–∑ –ø–æ—Å—Ç—É–ø–∏–ª –Ω–∞ —Å–∫–ª–∞–¥ –≤ –ö–∏—Ç–∞–µ",
                "–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è": "üöö –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –†–æ—Å—Å–∏—é",
                "–û–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è": "üìç –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–±—ã–ª –∏ –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è",
                "–î–æ—Å—Ç–∞–≤–ª–µ–Ω": "‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω",
                "–û—Ç–º–µ–Ω–µ–Ω": "‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω",
            }

            message = f"üîî <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{order_id} –∏–∑–º–µ–Ω–µ–Ω</b>\n\n"
            message += status_messages.get(new_status, f"–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}")

            await self.bot.send_message(
                chat_id=user_tg_id, text=message, parse_mode="HTML"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_tg_id}: {e}")

    async def notify_order_status_change_with_track(
        self, user_tg_id: int, order_id: int, new_status: str, track_number: str
    ):
        try:
            status_messages = {
                "–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è": "üöö –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –†–æ—Å—Å–∏—é",
            }

            message = f"üîî <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{order_id} –∏–∑–º–µ–Ω–µ–Ω</b>\n\n"
            message += status_messages.get(new_status, f"–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}")
            message += f"\n\nüá∑üá∫ <b>–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:</b> <code>{track_number}</code>"
            message += "\n\nüí° <i>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –∏ –æ—Ç—Å–ª–µ–¥–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ –ø–æ—á—Ç–æ–≤–æ–π —Å–ª—É–∂–±—ã</i>"

            await self.bot.send_message(
                chat_id=user_tg_id, text=message, parse_mode="HTML"
            )
        except Exception as e:
            logger.error(
                f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_tg_id}: {e}"
            )

    async def notify_order_ready_with_qr(
        self, user_tg_id: int, order_id: int, qr_photo_id: str
    ):
        try:
            message = (
                f"üîî <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{order_id} –∏–∑–º–µ–Ω–µ–Ω</b>\n\n"
                "üìç –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–±—ã–ª –∏ –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è\n\n"
                "üì± <b>QR-–∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:</b>\n"
                "–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞"
            )

            await self.bot.send_photo(
                chat_id=user_tg_id,
                photo=qr_photo_id,
                caption=message,
                parse_mode="HTML",
            )
        except Exception as e:
            logger.error(
                f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å QR-–∫–æ–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_tg_id}: {e}"
            )
