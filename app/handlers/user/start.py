import logging
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from app.keyboards import get_start_keyboard

logger = logging.getLogger(__name__)
start_router = Router()


@start_router.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = (
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
        "üá®üá≥ –Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ –ö–∏—Ç–∞—è –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ!\n\n"
        "üîß <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
        "‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
        "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –∞–¥—Ä–µ—Å–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏\n"
        "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –∏ —Ä–∞—Å—á–µ—Ç —Ü–µ–Ω\n"
        "‚Ä¢ –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n"
        "üì± <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"
    )

    await message.answer(
        welcome_text, reply_markup=get_start_keyboard(), parse_mode="HTML"
    )


@start_router.message(
    lambda message: message.text
    in [
        "üë§ –ü—Ä–æ—Ñ–∏–ª—å",
        "üìã –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
        "üìç –ê–¥—Ä–µ—Å–∞",
        "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã",
        "üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç",
        "üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",
        "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
    ]
)
async def handle_keyboard_buttons(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""

    try:
        if message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
            from .profile import show_profile

            await show_profile(message)

        elif message.text == "üìã –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑":
            from .order import start_order

            await start_order(message, state)

        elif message.text == "üìç –ê–¥—Ä–µ—Å–∞":
            from .addresses import show_addresses_command

            await show_addresses_command(message, state)

        elif message.text == "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã":
            from .order_history import show_user_orders

            await show_user_orders(message)

        elif message.text == "üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç":
            from .current_rate import show_current_rate

            await show_current_rate(message)

        elif message.text == "üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä":
            from .price_calc import start_calc

            await start_calc(message, state)

        elif message.text == "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
            from .support import start_support

            await start_support(message, state)

    except ImportError as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: {e}")
        await message.answer("‚ùå –ö–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã {message.text}: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
